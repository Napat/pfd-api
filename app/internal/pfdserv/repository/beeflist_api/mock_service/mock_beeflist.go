// Code generated by MockGen. DO NOT EDIT.
// Source: ./beeflist.go

// Package mock_beeflist_api is a generated GoMock package.
package mock_beeflist_api

import (
	context "context"
	reflect "reflect"

	model "github.com/Napat/pfd-api/app/internal/pfdserv/model"
	gomock "github.com/golang/mock/gomock"
)

// MockIBeefListAdaptor is a mock of IBeefListAdaptor interface.
type MockIBeefListAdaptor struct {
	ctrl     *gomock.Controller
	recorder *MockIBeefListAdaptorMockRecorder
}

// MockIBeefListAdaptorMockRecorder is the mock recorder for MockIBeefListAdaptor.
type MockIBeefListAdaptorMockRecorder struct {
	mock *MockIBeefListAdaptor
}

// NewMockIBeefListAdaptor creates a new mock instance.
func NewMockIBeefListAdaptor(ctrl *gomock.Controller) *MockIBeefListAdaptor {
	mock := &MockIBeefListAdaptor{ctrl: ctrl}
	mock.recorder = &MockIBeefListAdaptorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBeefListAdaptor) EXPECT() *MockIBeefListAdaptorMockRecorder {
	return m.recorder
}

// GetList mocks base method.
func (m *MockIBeefListAdaptor) GetList(ctx context.Context) (*model.BeeflistAdaptorResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetList", ctx)
	ret0, _ := ret[0].(*model.BeeflistAdaptorResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetList indicates an expected call of GetList.
func (mr *MockIBeefListAdaptorMockRecorder) GetList(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetList", reflect.TypeOf((*MockIBeefListAdaptor)(nil).GetList), ctx)
}
