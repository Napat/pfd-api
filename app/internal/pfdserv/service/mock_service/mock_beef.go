// Code generated by MockGen. DO NOT EDIT.
// Source: ./beef.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	model "github.com/Napat/pfd-api/app/internal/pfdserv/model"
	gomock "github.com/golang/mock/gomock"
)

// MockIBeefService is a mock of IBeefService interface.
type MockIBeefService struct {
	ctrl     *gomock.Controller
	recorder *MockIBeefServiceMockRecorder
}

// MockIBeefServiceMockRecorder is the mock recorder for MockIBeefService.
type MockIBeefServiceMockRecorder struct {
	mock *MockIBeefService
}

// NewMockIBeefService creates a new mock instance.
func NewMockIBeefService(ctrl *gomock.Controller) *MockIBeefService {
	mock := &MockIBeefService{ctrl: ctrl}
	mock.recorder = &MockIBeefServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIBeefService) EXPECT() *MockIBeefServiceMockRecorder {
	return m.recorder
}

// Summary mocks base method.
func (m *MockIBeefService) Summary(ctx context.Context) (*model.BeefSummaryResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Summary", ctx)
	ret0, _ := ret[0].(*model.BeefSummaryResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Summary indicates an expected call of Summary.
func (mr *MockIBeefServiceMockRecorder) Summary(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Summary", reflect.TypeOf((*MockIBeefService)(nil).Summary), ctx)
}
